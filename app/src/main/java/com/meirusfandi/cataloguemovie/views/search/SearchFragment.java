package com.meirusfandi.cataloguemovie.views.search;import android.app.ProgressDialog;import android.content.Context;import android.net.Uri;import android.os.Bundle;import android.os.Handler;import android.support.annotation.NonNull;import android.support.v4.app.Fragment;import android.support.v4.widget.SwipeRefreshLayout;import android.support.v7.widget.LinearLayoutManager;import android.support.v7.widget.RecyclerView;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.Button;import android.widget.EditText;import android.widget.Toast;import com.meirusfandi.cataloguemovie.BuildConfig;import com.meirusfandi.cataloguemovie.R;import com.meirusfandi.cataloguemovie.data.MovieModel;import com.meirusfandi.cataloguemovie.data.network.MovieClients;import com.meirusfandi.cataloguemovie.data.network.MovieInterface;import com.meirusfandi.cataloguemovie.data.network.MovieResponse;import com.meirusfandi.cataloguemovie.helper.MovieAdapter;import java.util.ArrayList;import java.util.List;import butterknife.BindView;import butterknife.ButterKnife;import retrofit2.Call;import retrofit2.Callback;import retrofit2.Response;public class SearchFragment extends Fragment {    @BindView(R.id.etSearch)    EditText etSearch;    @BindView(R.id.btnSearch)    Button btnSearch;    @BindView(R.id.recycler_search)    RecyclerView recyclerView;    @BindView(R.id.swipe)    SwipeRefreshLayout swipe;    MovieAdapter movieAdapter;    List<MovieModel> movieModels;    private static final String API_KEY = BuildConfig.API_KEY;    @Override    public void onViewCreated(View view, Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        ButterKnife.bind(this, view);        movieModels = new ArrayList<>();        movieAdapter = new MovieAdapter(movieModels, getContext());        movieAdapter.notifyDataSetChanged();        recyclerView.setHasFixedSize(true);        recyclerView.setLayoutManager(new LinearLayoutManager(getContext()));        recyclerView.setAdapter(movieAdapter);        btnSearch.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                getData();            }        });        swipe.setColorScheme(android.R.color.holo_blue_bright,                android.R.color.holo_green_light,                android.R.color.holo_orange_light,                android.R.color.holo_red_light);        swipe.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {            @Override            public void onRefresh() {                new Handler().postDelayed(new Runnable() {                    @Override                    public void run() {                        swipe.setRefreshing(false);                        getData();                    }                }, 3000);            }        });    }    MovieInterface endPoint;    Call<MovieResponse> movieResponseCall;    public void getData(){        final ProgressDialog dialog = new ProgressDialog(getContext());        dialog.setMessage("Searching Movie, Please Wait .... ");        dialog.setCancelable(false);        dialog.show();        String judul = etSearch.getText().toString();        String lang = BuildConfig.LANGUAGE;        endPoint = MovieClients.getClient().create(MovieInterface.class);        movieResponseCall = endPoint.getSearchMovie(API_KEY, lang ,judul);        movieResponseCall.enqueue(new Callback<MovieResponse>() {            @Override            public void onResponse(@NonNull Call<MovieResponse> call, @NonNull Response<MovieResponse> response) {                if (response.body() == null){                    Toast.makeText(getContext(), "Nothing movie with youe keyword Search", Toast.LENGTH_LONG).show();                } else {                    movieModels = response.body().getMovieModels();                    movieAdapter = new MovieAdapter(movieModels, getContext());                    movieAdapter.notifyDataSetChanged();                    recyclerView.setAdapter(movieAdapter);                    Toast.makeText(getContext(), "Fetching data from API Service has been Successfully", Toast.LENGTH_LONG).show();                }                dialog.dismiss();            }            @Override            public void onFailure(@NonNull Call<MovieResponse> call, @NonNull Throwable t) {                dialog.dismiss();                Toast.makeText(getContext(), "Error while getting data", Toast.LENGTH_LONG).show();            }        });    }    @Override    public View onCreateView(LayoutInflater inflater, ViewGroup container,                             Bundle savedInstanceState) {        // Inflate the layout for this fragment        return inflater.inflate(R.layout.fragment_search, container, false);    }    @Override    public void onAttach(Context context) {        super.onAttach(context);    }    @Override    public void onDetach() {        super.onDetach();    }    public interface OnFragmentInteractionListener {        // TODO: Update argument type and name        void onFragmentInteraction(Uri uri);    }}