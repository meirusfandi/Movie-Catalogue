package com.meirusfandi.cataloguemovie.notification;import android.app.AlarmManager;import android.app.NotificationChannel;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.media.RingtoneManager;import android.net.Uri;import android.os.Build;import android.support.v4.app.NotificationCompat;import android.support.v4.content.ContextCompat;import com.meirusfandi.cataloguemovie.R;import com.meirusfandi.cataloguemovie.data.MovieModel;import com.meirusfandi.cataloguemovie.views.detail.DetailActivity;import java.util.Calendar;import java.util.List;public class UpcomingReminder extends BroadcastReceiver{    private final static int NOTIFICATION_ID = 1001;    private final static String NOTIFICATION_CHANNEL_ID = "11001";    private final static String MOVIE_DETAIL = "movie_detail";    private static int notifId = 1000;    @Override    public void onReceive(Context context, Intent intent) {        String movieTitle = intent.getStringExtra("judul");        int id = intent.getIntExtra("idnotif", 0);        int movieId = intent.getIntExtra("id", 0);        String poster = intent.getStringExtra("poster");        String back = intent.getStringExtra("backdrop");        String date = intent.getStringExtra("release");        String ovr = intent.getStringExtra("overview");        String avg = intent.getStringExtra("rating" );        String pop = intent.getStringExtra("popularity");        MovieModel myMovies = new MovieModel(movieId, movieTitle, date, ovr, poster, back, pop, avg);        String desc = "Movie Has been Release";        sendNotification(context, context.getString(R.string.app_name), desc, id, myMovies);    }    private void sendNotification(Context context, String title, String desc, int id, MovieModel myMovies) {        NotificationManager notificationManager = (NotificationManager) context.getSystemService(                Context.NOTIFICATION_SERVICE);        Intent intent = new Intent(context, DetailActivity.class);        intent.putExtra(MOVIE_DETAIL, myMovies);        PendingIntent pendingIntent = PendingIntent.getActivity(context, id, intent,                PendingIntent.FLAG_UPDATE_CURRENT);        Uri uriTone = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);        NotificationCompat.Builder builder = new NotificationCompat.Builder(context)                .setSmallIcon(R.drawable.baseline_notification_important_black_48dp)                .setContentTitle(title)                .setContentText(desc)                .setContentIntent(pendingIntent)                .setColor(ContextCompat.getColor(context, android.R.color.transparent))                .setVibrate(new long[]{1000, 1000, 1000, 1000, 1000})                .setPriority(NotificationCompat.PRIORITY_HIGH)                .setAutoCancel(true)                .setSound(uriTone);        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {            NotificationChannel notificationChannel = new NotificationChannel(NOTIFICATION_CHANNEL_ID,                    "NOTIFICATION_CHANNEL_NAME", NotificationManager.IMPORTANCE_HIGH);            notificationChannel.enableLights(true);            notificationChannel.setLightColor(Color.YELLOW);            notificationChannel.enableVibration(true);            notificationChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400});            builder.setChannelId(NOTIFICATION_CHANNEL_ID);            assert notificationManager != null;            notificationManager.createNotificationChannel(notificationChannel);        }        assert notificationManager != null;        notificationManager.notify(id, builder.build());    }    public void setAlarm(Context context, List<MovieModel> myMovies) {        int delay = 0;        for (MovieModel movie : myMovies) {            cancelAlarm(context);            AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);            Intent intent = new Intent(context, UpcomingReminder.class);            intent.putExtra("judul", movie.getTitle());            intent.putExtra("id", movie.getId());            intent.putExtra("poster", movie.getPoster());            intent.putExtra("backdrop", movie.getBackdrop());            intent.putExtra("release", movie.getRelease());            intent.putExtra("rating", movie.getRating());            intent.putExtra("overview", movie.getOverview());            intent.putExtra("popularity", movie.getPopularity());            intent.putExtra("idnotif", notifId);            PendingIntent pendingIntent = PendingIntent.getBroadcast(context,                    100, intent, PendingIntent.FLAG_UPDATE_CURRENT);            Calendar calendar = Calendar.getInstance();            calendar.set(Calendar.HOUR_OF_DAY, 8);            calendar.set(Calendar.MINUTE, 0);            calendar.set(Calendar.SECOND, 0);            if(Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT && Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {                assert alarmManager != null;                alarmManager.setInexactRepeating(                        AlarmManager.RTC_WAKEUP,                        calendar.getTimeInMillis() + delay,                        AlarmManager.INTERVAL_DAY,                        pendingIntent                );            } else if(Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {                assert alarmManager != null;                alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,                        calendar.getTimeInMillis() + delay, pendingIntent);            }            notifId += 1;            delay += 3000;        }    }    public void cancelAlarm(Context context) {        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);        assert alarmManager != null;        alarmManager.cancel(getPendingIntent(context));    }    private static PendingIntent getPendingIntent(Context context) {        Intent intent = new Intent(context, UpcomingReminder.class);        return PendingIntent.getBroadcast(context, NOTIFICATION_ID, intent,                PendingIntent.FLAG_UPDATE_CURRENT);    }}