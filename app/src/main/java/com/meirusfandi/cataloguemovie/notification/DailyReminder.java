package com.meirusfandi.cataloguemovie.notification;import android.app.AlarmManager;import android.app.NotificationChannel;import android.app.NotificationManager;import android.app.PendingIntent;import android.content.BroadcastReceiver;import android.content.Context;import android.content.Intent;import android.graphics.Color;import android.media.RingtoneManager;import android.net.Uri;import android.os.Build;import android.support.v4.app.NotificationCompat;import android.support.v4.content.ContextCompat;import com.meirusfandi.cataloguemovie.R;import com.meirusfandi.cataloguemovie.views.main.MainActivity;import java.util.Calendar;public class DailyReminder extends BroadcastReceiver{    private final static int NOTIFICATION_ID = 1001;    private final static String NOTIFICATION_CHANNEL_ID = "11001";    @Override    public void onReceive(Context context, Intent intent) {        sendNotification(context, NOTIFICATION_ID);    }    private void sendNotification(Context context, int id) {        NotificationManager notificationManager = (NotificationManager) context.getSystemService(                Context.NOTIFICATION_SERVICE);        Intent intent = new Intent(context, MainActivity.class);        PendingIntent pendingIntent = PendingIntent.getActivity(context, id, intent,                PendingIntent.FLAG_UPDATE_CURRENT);        Uri uriTone = RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION);        NotificationCompat.Builder builder = new NotificationCompat.Builder(context)                .setSmallIcon(R.drawable.baseline_notification_important_black_48dp)                .setContentTitle("Movie UI/UX")                .setContentText("Lets open for Something new")                .setContentIntent(pendingIntent)                .setColor(ContextCompat.getColor(context, android.R.color.transparent))                .setVibrate(new long[]{1000, 1000, 1000, 1000, 1000})                .setPriority(NotificationCompat.PRIORITY_HIGH)                .setAutoCancel(true)                .setSound(uriTone);        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {            NotificationChannel notificationChannel = new NotificationChannel(                    NOTIFICATION_CHANNEL_ID, context.getString(R.string.notif_name_channel),                    NotificationManager.IMPORTANCE_HIGH);            notificationChannel.enableLights(true);            notificationChannel.setLightColor(Color.YELLOW);            notificationChannel.enableVibration(true);            notificationChannel.setVibrationPattern(new long[]{100, 200, 300, 400, 500, 400, 300, 200, 400});            builder.setChannelId(NOTIFICATION_CHANNEL_ID);            assert notificationManager != null;            notificationManager.createNotificationChannel(notificationChannel);        }        assert notificationManager != null;        notificationManager.notify(id, builder.build());    }    public void setAlarm(Context context) {        cancelAlarm(context);        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);        Calendar calendar = Calendar.getInstance();        calendar.set(Calendar.HOUR_OF_DAY, 7);        calendar.set(Calendar.MINUTE, 0);        calendar.set(Calendar.SECOND, 0);        if(Build.VERSION.SDK_INT > Build.VERSION_CODES.KITKAT && Build.VERSION.SDK_INT < Build.VERSION_CODES.M) {            assert alarmManager != null;            alarmManager.setInexactRepeating(                    AlarmManager.RTC_WAKEUP,                    calendar.getTimeInMillis(),                    AlarmManager.INTERVAL_DAY,                    getPendingIntent(context)            );        } else if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {            assert alarmManager != null;            alarmManager.setExactAndAllowWhileIdle(AlarmManager.RTC_WAKEUP,                    calendar.getTimeInMillis(), getPendingIntent(context));        }    }    public void cancelAlarm(Context context) {        AlarmManager alarmManager = (AlarmManager) context.getSystemService(Context.ALARM_SERVICE);        assert alarmManager != null;        alarmManager.cancel(getPendingIntent(context));    }    private static PendingIntent getPendingIntent(Context context) {        Intent intent = new Intent(context, DailyReminder.class);        return PendingIntent.getBroadcast(context, NOTIFICATION_ID, intent,                PendingIntent.FLAG_CANCEL_CURRENT);    }}